要求：
8k-88k内容复制到168k-248k上，其他数据都不变，
文件总长度256k


文件结构：
21字节一行，每行：第5个字节到第20个字节是数据(读写时是44字节一行)
第一个字节 0x10表示本行数据的长度； 

第二、三字节 0x00 0x08表示本行数据的起始地址； 

第四字节 0x00表示数据类型，数据类型有：0x00、0x01、0x02、0x03、0x04、0x05。 

'00' Data Rrecord：用来记录数据，HEX文件的大部分记录都是数据记录 

'01' End of File Record: 用来标识文件结束，放在文件的最后，标识HEX文件的结尾 

'02' Extended Segment Address Record: 用来标识扩展段地址的记录 

'03' Start Segment Address Record:开始段地址记录 

'04' Extended Linear Address Record: 用来标识扩展线性地址的记录 

'05' Start Linear Address Record:开始线性地址记录 

然后是数据
最后一个字节为校验和 = 0x100-第1到第21个字节的和（去除溢出0x100） 





代码设计：

copy.hex
去除前面8k不用的数据所占用的行数据，保留后面需要复制的重要数据（不用fseek以免对文本文件操作出现错误）。

end.hex
包含最后8k要补充的数据。


代码思路：
1 读取前面168k需要的数据到out.hex;
2 复制一部分数据，补充扩展基地址位；
3 复制前56k数据，跳过中间16位不用的扩展基地址位；
4 再复制后面24k数据；
（中间要更改地址为、校验位、ASCII码字符与数字之间相互转换）
5 补充后面的end.hex数据。



in.hex数据结构：
0-176k 
:020000040001F9       (16byte)

176k-352k
:020000040002F8     (16byte)

352k-528k                                462k-682k
:020000040003F7     (16byte)

528k-704k
:00000001FF         (11byte)


//每行按44个字节算的、每个字符1个字节、最后一个是换行
  
复制的内容：22k-242k

第616k时，会有条地址扩展信息 16字节要跳过



